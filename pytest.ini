# pytest.ini

[pytest]
testpaths =
    tests

markers = 
    test_item_constructor: mark test for item construction
    test_item_representation: mark test for __repr__ overwrite method
    test_normal_item: mark test for normal item update # this marker follows else condition 
    test_normal_item_sell_in_zero: mark test for normal item sell_in 0 # this marker follows if ciondition
    test_sulfuras_item: mark test for sulfuras item
    test_conjured_item_IF: mark test for conjured item where sell in > 0 # this marker follows if condition
    test_conjured_item_ELSE: mark test for conjured item where sell in < 0 # this marker follows else condition
    test_aged_brie_item_IF: mark test for aged brie item where sell in <= 0 # this marker follows if condition
    test_aged_brie_item_ELSE: mark test for age brie item where sell in > 0 # this marker follows else condition
    test_backstage_passes_item_IF: mark test for backstage_passes_item where sell in <= 10 and > 5 # this marker follows if condition
    test_backstage_passes_item_FIRST_ELIF: mark test for backstage_passes_item where sell in <= 5 and >= 1 # this marker follows first elif condition
    test_backstage_passes_item_SECOND_ELIF: mark test for backstage_passes_item where sell in <= 0 # this marker follows second elif condition
    test_backstage_passes_item_ELSE: mark test for backstage_passes_item where sell in > 10 # this markers follows else condition